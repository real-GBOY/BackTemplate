@baseUrl = http://localhost:6969
@accessToken = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2OGI3OGQ5YjVhNGU0NGYzOTkzYjZjMDMiLCJlbWFpbCI6InRlc3RAZXhhbXBsZS5jb20iLCJyb2xlIjoibWVtYmVyIiwiaWF0IjoxNzU2ODU5ODk2LCJleHAiOjE3NTY5NDYyOTZ9.iCX-i85--rhsHc8QfeuNWJB4-on29M4QvoTUnkvbOrs
@refreshToken = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2OGI3OGQ5YjVhNGU0NGYzOTkzYjZjMDMiLCJlbWFpbCI6InRlc3RAZXhhbXBsZS5jb20iLCJyb2xlIjoibWVtYmVyIiwiaWF0IjoxNzU2ODU5ODk2LCJleHAiOjE3NTc0NjQ2OTZ9.jvkf1UXV0gNFrf1rN2I_ouaV1nekOgSFDbzFp1s-MLI

### Signup/Register new user (no token generated)
POST {{baseUrl}}/api/auth/signup
Content-Type: application/json

{
	"email": "test@example.com",
	"password": "plainpass123",
	"role": "member"
}

### Login user
POST {{baseUrl}}/api/auth/login
Content-Type: application/json

{
	"email": "test@example.com",
	"password": "plainpass123"
}

### Get current user profile (requires access token)
GET {{baseUrl}}/api/auth/profile
Authorization: Bearer {{accessToken}}

### Refresh token (requires refresh token in body)
POST {{baseUrl}}/api/auth/refresh
Content-Type: application/json

{
	"refreshToken": "{{refreshToken}}"
}

### Logout (requires access token)
POST {{baseUrl}}/api/auth/logout
Authorization: Bearer {{accessToken}}

### Get unverified users (admin only)
GET {{baseUrl}}/api/auth/unverified
Authorization: Bearer {{accessToken}}

### Verify user (admin only)
PATCH {{baseUrl}}/api/auth/verify/REPLACE_WITH_USER_ID
Authorization: Bearer {{accessToken}}
Content-Type: application/json

{
	"isVerified": true
}

### Unverify user (admin only)
PATCH {{baseUrl}}/api/auth/verify/REPLACE_WITH_USER_ID
Authorization: Bearer {{accessToken}}
Content-Type: application/json

{
	"isVerified": false
}

### Get all users (admin only)
GET {{baseUrl}}/api/users
Authorization: Bearer {{accessToken}}

### Get user by ID (admin only)
GET {{baseUrl}}/api/users/REPLACE_WITH_USER_ID
Authorization: Bearer {{accessToken}}

### Update user (admin only)
PATCH {{baseUrl}}/api/users/REPLACE_WITH_USER_ID
Authorization: Bearer {{accessToken}}
Content-Type: application/json

{
	"role": "admin"
}

### Delete user (admin only)
DELETE {{baseUrl}}/api/users/REPLACE_WITH_USER_ID
Authorization: Bearer {{accessToken}}

### Test login with unverified user (should fail)
POST {{baseUrl}}/api/auth/login
Content-Type: application/json

{
	"email": "test@example.com",
	"password": "plainpass123"
}

### Test invalid login
POST {{baseUrl}}/api/auth/login
Content-Type: application/json

{
	"email": "wrong@example.com",
	"password": "wrongpass"
}

### Test protected route without token
GET {{baseUrl}}/api/auth/profile

### Test protected route with invalid token
GET {{baseUrl}}/api/auth/profile
Authorization: Bearer invalid_token_here

### Test refresh with invalid refresh token
POST {{baseUrl}}/api/auth/refresh
Content-Type: application/json

{
	"refreshToken": "invalid_refresh_token"
}

### Test refresh without refresh token
POST {{baseUrl}}/api/auth/refresh
Content-Type: application/json

{}
